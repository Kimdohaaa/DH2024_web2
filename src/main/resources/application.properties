# : .properties 파일의 주석
# 실행 시 한글이 깨질 경우 설정 -> 에디터 -> 파일인코딩 에서 properties 파일을 UTF-8 로 변경

# properties 의 역할 #
# [1] 내장 톰캣(서버) 의 port 변경 가능
#   -> 형식 : server.port = 변경할 포트 번호
server.port =8080
#server.port =5184

# [2] JDBC 연동
#   1) 연동할 DB 생성 (Workbench 에서 생성)
#   2) JDBC URL 연동 ★ 주의점 : 이퀄 뒤 에 띄어쓰기도 인식하기 때문에 띄어쓰기 하지 말기! ★
#   -> DB 연동 : spring.datasource.url =jdbc:mysql://localhost:포트번호/연동할 DB 명
#   -> DB 계정 연동 : spring.datasource.username =계정명
#   -> DB 비밀번호 연동 : spring.datasource.password =비밀번호
spring.datasource.url=jdbc:mysql://localhost:3306/springweb
spring.datasource.username =root
spring.datasource.password =1234
#   [3] MyBatis.XML 파일의 경로 설정 (classpath : sr)
#   -> mybatis.mapper-locations = classpath:resources 의 mybatis 폴더 경로/*.xml
mybatis.mapper-locations = classpath:mybatis/mapper/*.xml
#   [4] resource 폴더 하위에 mybatis 폴더 생성 -> mapper 폴더 생성

# Spring 이 서버 실행 시 SQL 파일을 자동으로 읽어들이도록 설정 #
# 1) spring.sql.init.mode=always -> schema.sql / data.sql 파일을 실행
# 2) spring.sql.init.mode=never -> schema.sql / data.sql 파일 실행하지 않음
# 3) spring.sql.init.mode=embedded -> 내장 DB 에서만 실행하고 외부 DB 에서는 실행하지 않음
#spring.sql.init.mode=always
spring.sql.init.mode=always

# [5] multipartFile 사용 시 용량 제한 설정 (기본값 개별 : 1MB / 전체 : 10MB)
# -1 : 무제한 용량(서버 과부하 주의)
# 5-1) 파일 용량을 100MB 로 지정
spring.servlet.multipart.max-file-size = 100MB 
spring.servlet.multipart..max-request-size = 100MB
# 5-2) tomcat 서버 용량 지정
server.tomcat.max-swallows-size = -1