★ 훅이 리액트의 핵심 ★
[용어정리]
1. DOM ( Document Object Model ) : HTML 문서의 구조를 표현하는 객체
    - Element :  HTML 마크업 예] <div> <input> <p> 등
    - Text : HTML 마크업 사이의 내용 예] <마크업> Text </마크업>
    - Attribute : HTML 마크업의 속성 예] class / id / name / href / src 등

2. Virtual DOM : 가상 DOM 
    - 실제 DOM 을 직접 수정하지 않고 가상의 DOM 을 생성하여 실제 DOM 과 비교하여 필요한 부분만 업데이트 / 수정
    - 리액트에서 Virtual DOM 을 사용할 경우
        -> Element == 컴포넌트 
        -> Attribute == props
    ★ 리액트 컴포넌트 만들기 == HTML 마크업 만들기 ★
    - 장점 : 부분적 렌더링(사이드바 / 헤더 등은 렌더링 X 실제 컨텐츠 부분만 렌더링)에 따른 빠르고 효율적인 최적화 렌더링 가능 


3. 흐름 : 컴포넌트를 통해 가상 DOM 생성 -리액트의 렌더링-> HTML 에서 활용


[컴포넌트의 생명주기]
- 컴포넌트가 생성되는 시점 ~ 소멸하는 시점
- 시점
    1) 마운드(생성) :mount
        -> render : main.jsx 에 존재하는 컴포넌트를 그려주는 함수
            : 상위 컴포넌트 return 시 하위 컴포넌트도 같이 return 되기 때문에 하위컴포넌트도 같이 생성됨
        -> useeffect(() => {} , []) : 컴포넌트 실행 시 최초 1번 실행되는 함수

    2) 업데이트(존재) : update
        -> setState() / props 등 이 변경될 때
        -> redux 를 통해 변경
            : 컴포넌트 리렌더링(== UI 새로고침 == 컴포넌트 재호출)
        -> useEffect(() => {}, [의존성(=대상)]) : 컴포넌트 업데이트 시 마다 실행되는 함수
            ★ 의존성 : 누가 업데이트 되엇을 때 실행할지 지정 / state 변수명을 넣어줌

    3) 언마운트(소멸) :unmount
            : 클라이언트가 보는 페이지에서 사라질 때(페이지 이동 등) 자동으로 컴포넌트 소멸
        -> useEffect( return () => {} , []) : 컴포넌트 제거 / 소멸 시 실행되는 함수
            ★ return 에 컴포넌트가 제거될 때 실행 할 함수 코드를 넣어줌



[훅]
1. 정의 : 리액트의 컴포넌트 상태(state)와 생명주기 기능에 갈고리를 걸어 원하는 시점에 정해진 함수를 실행하도록 만든 라이브러리
2. 훅의 함수 종류
    1) useState() : 
    2) useEffect() : 컴포넌트 실행 시 최초 1번 실행되는 함수
    3) useRef()

