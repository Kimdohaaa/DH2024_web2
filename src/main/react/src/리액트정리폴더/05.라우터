[리액트 라우터]
- 리액트는 SPA(Single Page Application) 으로 HTML 이 index.html 하나만 존재하여 페이지 전환이 없음
- 리액트에서 페이지 전환 시 React Router 을 통해 컴포넌트를 전환
-> React Router 가 컴포넌트의 HTTP 가상 URL 을 만들고 가상 URL 을 요청하여 컴포넌트를 전환
1. 정의 : SPA 방식에서 화면 이동 시 새로고침 없이 컴포넌트 변경 지원
2. 설치 
    ★ !!! 서버가 꺼져있는 상태에서 설치 : 터미널에 오른쪽 옆에서 서버 쓰레기통 클릭 !!! ★
    ★ npm : node.js 가 제공하는 외부라이브러리 설치/관리 프로그램 (npm 홈페이지에서 여러 라이브러리 설치 코드 가져오기 가능)★
    -> npm 홈페이지 주소 : https://www.npmjs.com/
    1) 라이브러리 설치 : npm i react-router-dom
    2) 설치 후 서버 재 실행 : npm run dev
3. 사용법
    ★ !!! 라우터 관련 컴포넌트 import 하기 !!!
    ★ a 태그 대신 Link 를 통해 화면이동 ★
    1) 모든 컴포넌트를 연결하는 라우터 컴포넌트 생성
    2) 라우터 컴포넌트에서 연결할 하위컴포넌를 <BrowerRouter><BrowerRouter/> 마크업 안에 넣기
    3) 연결할 각 컴포넌트들의 가상 URL 정의
        <Rutes>
            <Rounte path="가상URL" element = {연결할 컴포넌트}/>
        </Rutes>
4. 라우터를 이용한 컴포넌트에게 매개변수 전달
    1. queryStirng 방식 : URL ?key=value
        - 가상경로 정의 : <Route path="/URL" element ={ <컴포넌트명 /> } > </Route>
        - 호출 : <Link to="URL/key=value"> </Link>
        - 컴포넌트에서 사용
            1_ import {useSearchparams} from 'react-router-dom'
            2_ const {searchParams} = useSerarchparams()
            3_ const 변수명 = searchParams.get("key0")
    2. path 방식 : URL/value/
        - 가상경로 정의 : <Route path="/URL/:key" element ={ <컴포넌트명 /> } > </Route>
        - 호출 : <Link to="/URl/value"></Link>
        - 컴포넌트에서 사용
            1_ import {useParams} from 'react-router-dom'
            2_ const {변수명} = useParams();
5. 정의되지 않은 라우터의 가상 URL 을 특정 컴포넌트로 라우팅
    - <Route path= "*" element ={<오류페이지출력컴포넌트명/>} > </Route>
     => 와일드 카드를 이용하여 URL 받기
6. 가상 URL 호출 방법
    - React JSX 에서 호출 : <Link to="이동할 URL"> </Link>
    - React JS 호출 : navigate("이동할 URL")

    - navigate 상용법
        1_ import {useNavigate} from 'react-router-dom'
        2_ const navigate = useNavigate
        3_ navigate("이동할 URL")