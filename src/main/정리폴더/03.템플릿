- 아파치(정적파일 서버)
    [정적파일]
    -> HTML / JS / CSS / IMG / XML 등 별도의 해석과정이 필요없는 순수 코드 파일
    -> 브라우저가 해석 가능한 파일
    -> Spring 의 정적파일 기본값 위치 : resource -> static
    -> static 폴더 내 정적 파일 생성 시 자동으로 static 이하 HTTP 경로가 설정
        예] static/img/default.jsp -자동 설정-> http://localhost:8080/img/default.jpg
            +                       => Apache Tomcat : 정적파일과 동적파일 모두 지원하는 서버
- 톰캣(동적파일 서버 / 자바)
    [동적파일]
    -> JSP / Thymeleaf / Mustache / React 등 별도의 해석과정이 필요한 코드 ★ Spring 은 JSP 템플릿 지원 X ★
    -> 브라우저가 해석 불가능한 파일 => 톰캣이 해석함
    -> Spring 의 동적파일 기본값 위치 : resource -> templates
    -> templates 폴더 내 동적 파일 생성 시 @Controller 에서 view 반환 HTTP 매핑을 해야함


[Axios]
- 대표적인 비동기 / 동기 통신 함수 : Fetch vs Axios
- 특징
    1) JSON 탕비으로 자동 변환
    2) Node.js 지원
    3) 비동기 통신으로 요청 후 응답을 기다리지 않고 다음 코드를 실행함

- 관례적 유형
    1. 비동기 유형_1
        () => {
            axios.HTTP메소드명("HTTP URL", {})
                .then(response => console.log(response.data))
                .catch(error => console.log(error));
        }
    2. 동기 유형_1 (then ~ catch 사용)
       async () => {
            await axios.HTTP메소드명("HTTP URL", {})
                .then(response => console.log(response.data))
                .catch(error => console.log(error));
    3. 동기 유형_2 (try ~ catch 사용)
        async () => {
            try{
                 const response = await axios.HTTP메소드명("HTTP URL", {})
                 console.log(response.data);
            }catch(error){ console.log(error);}
        }
[Axios 설치]
★ fetch (JS 내장 함수) vs ajax(JQUERY) vs  Axios(React) -> 기본값이 JSON 으로 형변환을 하지 않아도 됨 ★
1. https://axios-http.com/kr/docs/intro
2. HTML 에 axios CDN 코드 넣기

[Axios 문법]
1. axios.post('통신할 HTTP 주소', {옵션});
2. axios.get('통신할 HTTP 주소', {옵션});
3. axios.put('통신할 HTTP 주소', {옵션});
4. axios.delete('통신할 HTTP 주소', {옵션});
-> Spring 환경에서는 @RestController 에서 정의한 매핑 주소 사용 ★ JSP 와 다르게 프로젝트명 생략가능 ★

[Axios Option]
- HTTP Header 설정
-> 기본값이 Content-Type : "application/json"



