[암호화]
- 정의 : 자료를 보호하기 위해서 사람이 이해하기 어려운 문자로 변환
- 목적
    1. 자료보안 : 해킹으로부터 자료보호
    2. 자료 무결성 유지
    등등 ~~~
- 사용처
    1. HTTPS : SSL/TLS 프로토콜을 이용하여 암호화
    2. 결제 비밀번호 암호화
    3. 금융 거래 암호화
    등등 ~~~
- 용어
    1. 암호화(=인코딩) : 자료를 변환하는 과정(사람이 이해하기 어려운 문자로)
    2. 복호화 : 암호화된 자료를 원해 상태로 변환하는 과정
    3. 해시함수 : 데이터를 고정된 길이로 변환하는 함수
    4. 단방향 암호화 : 원래 상태로 변환할 수 없는 암호화 방식 => 해시 방식
    5. 양방향 암호화 : 원래 상태로 변환할 수 있는 암호화 방식
    6. 솔트 : 암호화 시 사용되는 랜덤값
    7. 레인보우 테이블 ; 미리 계산된 해시 값을 이용하여 복호화를 찾는 기법


[실무 암호화 알고리즘]
1. Bcrypt 알고림즘(해시방식사용 / 주로 비밀번호에 사용)
2. SHA-256 알고리즘(주로 파일 검증 / 전자 서명에 사용)
3. TLS 알고리즘 (주로 HTTP 에 사용)

[Bcrypt(비크립트]
- 정의 : 해시 함수를 이용하여 주로 비밀번호를 암호화 시 사용
- 특징
    1) 솔트(salt) : 같은 비밀번호를 솔트값(랜덤값)을 통해 서로 다른 암호된 문자로 만듦
        (자료)abc (솔트)1234 -> a154b8734~
    2) 반복연산적용 : 해독하는 속도 ↓
    3) 단방향 암호화(원본 복구 불가능)
        예] 로그인 비밀번호 검증은 자료비교가 아닌 해시값을 비교하여 검증함


[비크립트 사용법]
1. build.gradle 에서 비크립트 라이브러리 추가
    -> MVN 에서 Crypto 검색 -> [Spring Security Crypto]

<암호화>
2. 비크립트 객체 생성 ( BCryptPasswordEncoder 변수명 = new BCryptPasswordEncoder(); )
3. 암호화 : (String hashedPassword = 변수명.encode(암호화할 자료); )
4. 암호화된 값을 DTO 에 넣어 DB 처리 (DTO명.setXXX((암호화한 변수명));)

<검증>
1. 비크립트 객체 생성 ( BCryptPasswordEncoder 변수명 = new BCryptPasswordEncoder(); )
2. 검증 ( boolean 변수명 = 비클립트변수명.matches(검증할 자료, 암호화된 변수명); )
    => .matches() 는 검증 결과를 boolean 타입으로 반환함
3. 검증 후 처리